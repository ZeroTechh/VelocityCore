// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jwt-srv.proto

package jwt_srv

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ValidRequest_TokenType int32

const (
	ValidRequest_ACCESS  ValidRequest_TokenType = 0
	ValidRequest_FRESH   ValidRequest_TokenType = 1
	ValidRequest_REFRESH ValidRequest_TokenType = 2
)

var ValidRequest_TokenType_name = map[int32]string{
	0: "ACCESS",
	1: "FRESH",
	2: "REFRESH",
}

var ValidRequest_TokenType_value = map[string]int32{
	"ACCESS":  0,
	"FRESH":   1,
	"REFRESH": 2,
}

func (x ValidRequest_TokenType) String() string {
	return proto.EnumName(ValidRequest_TokenType_name, int32(x))
}

func (ValidRequest_TokenType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_81325aed56fd2b61, []int{0, 0}
}

type ValidRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidRequest) Reset()         { *m = ValidRequest{} }
func (m *ValidRequest) String() string { return proto.CompactTextString(m) }
func (*ValidRequest) ProtoMessage()    {}
func (*ValidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_81325aed56fd2b61, []int{0}
}

func (m *ValidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidRequest.Unmarshal(m, b)
}
func (m *ValidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidRequest.Marshal(b, m, deterministic)
}
func (m *ValidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidRequest.Merge(m, src)
}
func (m *ValidRequest) XXX_Size() int {
	return xxx_messageInfo_ValidRequest.Size(m)
}
func (m *ValidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidRequest proto.InternalMessageInfo

func (m *ValidRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type JWTData struct {
	UserIdentity         string   `protobuf:"bytes,1,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	Scopes               []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JWTData) Reset()         { *m = JWTData{} }
func (m *JWTData) String() string { return proto.CompactTextString(m) }
func (*JWTData) ProtoMessage()    {}
func (*JWTData) Descriptor() ([]byte, []int) {
	return fileDescriptor_81325aed56fd2b61, []int{1}
}

func (m *JWTData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWTData.Unmarshal(m, b)
}
func (m *JWTData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWTData.Marshal(b, m, deterministic)
}
func (m *JWTData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWTData.Merge(m, src)
}
func (m *JWTData) XXX_Size() int {
	return xxx_messageInfo_JWTData.Size(m)
}
func (m *JWTData) XXX_DiscardUnknown() {
	xxx_messageInfo_JWTData.DiscardUnknown(m)
}

var xxx_messageInfo_JWTData proto.InternalMessageInfo

func (m *JWTData) GetUserIdentity() string {
	if m != nil {
		return m.UserIdentity
	}
	return ""
}

func (m *JWTData) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type Token struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_81325aed56fd2b61, []int{2}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Token) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AccessAndRefreshToken struct {
	AcccessToken         string   `protobuf:"bytes,1,opt,name=acccessToken,proto3" json:"acccessToken,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccessAndRefreshToken) Reset()         { *m = AccessAndRefreshToken{} }
func (m *AccessAndRefreshToken) String() string { return proto.CompactTextString(m) }
func (*AccessAndRefreshToken) ProtoMessage()    {}
func (*AccessAndRefreshToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_81325aed56fd2b61, []int{3}
}

func (m *AccessAndRefreshToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessAndRefreshToken.Unmarshal(m, b)
}
func (m *AccessAndRefreshToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessAndRefreshToken.Marshal(b, m, deterministic)
}
func (m *AccessAndRefreshToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessAndRefreshToken.Merge(m, src)
}
func (m *AccessAndRefreshToken) XXX_Size() int {
	return xxx_messageInfo_AccessAndRefreshToken.Size(m)
}
func (m *AccessAndRefreshToken) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessAndRefreshToken.DiscardUnknown(m)
}

var xxx_messageInfo_AccessAndRefreshToken proto.InternalMessageInfo

func (m *AccessAndRefreshToken) GetAcccessToken() string {
	if m != nil {
		return m.AcccessToken
	}
	return ""
}

func (m *AccessAndRefreshToken) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *AccessAndRefreshToken) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TokenValid struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenValid) Reset()         { *m = TokenValid{} }
func (m *TokenValid) String() string { return proto.CompactTextString(m) }
func (*TokenValid) ProtoMessage()    {}
func (*TokenValid) Descriptor() ([]byte, []int) {
	return fileDescriptor_81325aed56fd2b61, []int{4}
}

func (m *TokenValid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenValid.Unmarshal(m, b)
}
func (m *TokenValid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenValid.Marshal(b, m, deterministic)
}
func (m *TokenValid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenValid.Merge(m, src)
}
func (m *TokenValid) XXX_Size() int {
	return xxx_messageInfo_TokenValid.Size(m)
}
func (m *TokenValid) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenValid.DiscardUnknown(m)
}

var xxx_messageInfo_TokenValid proto.InternalMessageInfo

func (m *TokenValid) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

type Claims struct {
	UserIdentity         string   `protobuf:"bytes,1,opt,name=userIdentity,proto3" json:"userIdentity,omitempty"`
	Scopes               []string `protobuf:"bytes,2,rep,name=scopes,proto3" json:"scopes,omitempty"`
	TokenType            string   `protobuf:"bytes,3,opt,name=tokenType,proto3" json:"tokenType,omitempty"`
	CreationUTC          int64    `protobuf:"varint,4,opt,name=creationUTC,proto3" json:"creationUTC,omitempty"`
	ExpirationUTC        int64    `protobuf:"varint,5,opt,name=expirationUTC,proto3" json:"expirationUTC,omitempty"`
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Valid                bool     `protobuf:"varint,7,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Claims) Reset()         { *m = Claims{} }
func (m *Claims) String() string { return proto.CompactTextString(m) }
func (*Claims) ProtoMessage()    {}
func (*Claims) Descriptor() ([]byte, []int) {
	return fileDescriptor_81325aed56fd2b61, []int{5}
}

func (m *Claims) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claims.Unmarshal(m, b)
}
func (m *Claims) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claims.Marshal(b, m, deterministic)
}
func (m *Claims) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claims.Merge(m, src)
}
func (m *Claims) XXX_Size() int {
	return xxx_messageInfo_Claims.Size(m)
}
func (m *Claims) XXX_DiscardUnknown() {
	xxx_messageInfo_Claims.DiscardUnknown(m)
}

var xxx_messageInfo_Claims proto.InternalMessageInfo

func (m *Claims) GetUserIdentity() string {
	if m != nil {
		return m.UserIdentity
	}
	return ""
}

func (m *Claims) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *Claims) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *Claims) GetCreationUTC() int64 {
	if m != nil {
		return m.CreationUTC
	}
	return 0
}

func (m *Claims) GetExpirationUTC() int64 {
	if m != nil {
		return m.ExpirationUTC
	}
	return 0
}

func (m *Claims) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Claims) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterEnum("ValidRequest_TokenType", ValidRequest_TokenType_name, ValidRequest_TokenType_value)
	proto.RegisterType((*ValidRequest)(nil), "ValidRequest")
	proto.RegisterType((*JWTData)(nil), "JWTData")
	proto.RegisterType((*Token)(nil), "Token")
	proto.RegisterType((*AccessAndRefreshToken)(nil), "AccessAndRefreshToken")
	proto.RegisterType((*TokenValid)(nil), "TokenValid")
	proto.RegisterType((*Claims)(nil), "Claims")
}

func init() { proto.RegisterFile("jwt-srv.proto", fileDescriptor_81325aed56fd2b61) }

var fileDescriptor_81325aed56fd2b61 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xcd, 0x6e, 0x9b, 0x40,
	0x18, 0x04, 0x53, 0xc0, 0x7c, 0x36, 0x92, 0xb5, 0x6a, 0x2d, 0x64, 0xf5, 0x80, 0x56, 0x3d, 0xb8,
	0x87, 0x52, 0xb5, 0x3d, 0xf4, 0xd2, 0x8b, 0x45, 0xb1, 0x12, 0x1f, 0xd7, 0x38, 0x3e, 0x6f, 0xf0,
	0x26, 0x21, 0xb1, 0x81, 0xb0, 0x6b, 0x27, 0x7e, 0xbe, 0xbc, 0x45, 0x9e, 0x26, 0x62, 0xc1, 0xf1,
	0x22, 0x59, 0xbe, 0xe4, 0xb6, 0x33, 0xcc, 0xf7, 0x3b, 0x1f, 0xe0, 0xde, 0x3f, 0x89, 0x1f, 0xbc,
	0xdc, 0x05, 0x45, 0x99, 0x8b, 0x1c, 0x2f, 0xa0, 0x7f, 0x45, 0xd7, 0xe9, 0x8a, 0xb0, 0xc7, 0x2d,
	0xe3, 0x02, 0x7d, 0x06, 0x53, 0xe4, 0x0f, 0x2c, 0xf3, 0x74, 0x5f, 0x1f, 0x3b, 0xa4, 0x06, 0xf8,
	0x27, 0x38, 0x71, 0xf5, 0x88, 0xf7, 0x05, 0x43, 0x00, 0xd6, 0x24, 0x0c, 0xa3, 0xf9, 0x7c, 0xa0,
	0x21, 0x07, 0xcc, 0x29, 0x89, 0xe6, 0x17, 0x03, 0x1d, 0xf5, 0xc0, 0x26, 0x51, 0x0d, 0x3a, 0x38,
	0x02, 0x7b, 0xb6, 0x8c, 0xff, 0x53, 0x41, 0x11, 0x86, 0xfe, 0x96, 0xb3, 0xf2, 0x72, 0xc5, 0x32,
	0x91, 0x8a, 0x7d, 0x93, 0xb8, 0xc5, 0xa1, 0x21, 0x58, 0x3c, 0xc9, 0x0b, 0xc6, 0xbd, 0x8e, 0x6f,
	0x8c, 0x1d, 0xd2, 0x20, 0xfc, 0x17, 0x4c, 0x59, 0xf7, 0x74, 0x5b, 0xc8, 0x03, 0x7b, 0xc3, 0x38,
	0xa7, 0xb7, 0xcc, 0x33, 0x24, 0x7f, 0x80, 0x78, 0x0f, 0x5f, 0x26, 0x49, 0xc2, 0x38, 0x9f, 0x64,
	0x2b, 0xc2, 0x6e, 0x4a, 0xc6, 0xef, 0xea, 0x44, 0x18, 0xfa, 0x34, 0x91, 0x5f, 0x62, 0x25, 0x5f,
	0x8b, 0xab, 0x34, 0xa5, 0x12, 0xe3, 0x75, 0x6a, 0x8d, 0xca, 0x9d, 0x29, 0x8d, 0x01, 0xa4, 0x44,
	0xae, 0xb5, 0x6a, 0x7c, 0x57, 0x3d, 0x64, 0xa1, 0x2e, 0xa9, 0x01, 0x7e, 0xd5, 0xc1, 0x0a, 0xd7,
	0x34, 0xdd, 0xf0, 0x8f, 0xac, 0x07, 0x7d, 0x05, 0x47, 0x1c, 0x6c, 0x69, 0xda, 0x38, 0x12, 0xc8,
	0x87, 0x5e, 0x52, 0x32, 0x2a, 0xd2, 0x3c, 0x5b, 0xc4, 0xa1, 0xf7, 0xc9, 0xd7, 0xc7, 0x06, 0x51,
	0x29, 0xf4, 0x0d, 0x5c, 0xf6, 0x5c, 0xa4, 0xe5, 0xbb, 0xc6, 0x94, 0x9a, 0x36, 0xa9, 0x8e, 0x6a,
	0xb5, 0x46, 0x3d, 0x0e, 0x67, 0x2b, 0xc3, 0xfd, 0x7e, 0xd1, 0xc1, 0x98, 0x2d, 0x63, 0xe4, 0x03,
	0x4c, 0x8f, 0x0b, 0xeb, 0x06, 0xcd, 0x41, 0x8c, 0xac, 0x40, 0x32, 0x58, 0x43, 0xff, 0x60, 0x78,
	0xd2, 0x25, 0xae, 0xa8, 0x87, 0xc1, 0x49, 0x09, 0xd6, 0xd0, 0x2f, 0x70, 0xdb, 0x41, 0x4d, 0xe2,
	0x33, 0x21, 0xdf, 0xc1, 0x95, 0xb6, 0x50, 0xc1, 0xea, 0xae, 0xdc, 0x40, 0xbd, 0xfe, 0x91, 0x1d,
	0xd4, 0xae, 0x60, 0xed, 0xda, 0x92, 0xff, 0xc7, 0x9f, 0xb7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2e,
	0x96, 0x28, 0x2d, 0x30, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JWTClient is the client API for JWT service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JWTClient interface {
	FreshToken(ctx context.Context, in *JWTData, opts ...grpc.CallOption) (*Token, error)
	AccessAndRefreshTokens(ctx context.Context, in *JWTData, opts ...grpc.CallOption) (*AccessAndRefreshToken, error)
	RefreshTokens(ctx context.Context, in *Token, opts ...grpc.CallOption) (*AccessAndRefreshToken, error)
	ValidateToken(ctx context.Context, in *ValidRequest, opts ...grpc.CallOption) (*Claims, error)
}

type jWTClient struct {
	cc *grpc.ClientConn
}

func NewJWTClient(cc *grpc.ClientConn) JWTClient {
	return &jWTClient{cc}
}

func (c *jWTClient) FreshToken(ctx context.Context, in *JWTData, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/JWT/FreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jWTClient) AccessAndRefreshTokens(ctx context.Context, in *JWTData, opts ...grpc.CallOption) (*AccessAndRefreshToken, error) {
	out := new(AccessAndRefreshToken)
	err := c.cc.Invoke(ctx, "/JWT/AccessAndRefreshTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jWTClient) RefreshTokens(ctx context.Context, in *Token, opts ...grpc.CallOption) (*AccessAndRefreshToken, error) {
	out := new(AccessAndRefreshToken)
	err := c.cc.Invoke(ctx, "/JWT/RefreshTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jWTClient) ValidateToken(ctx context.Context, in *ValidRequest, opts ...grpc.CallOption) (*Claims, error) {
	out := new(Claims)
	err := c.cc.Invoke(ctx, "/JWT/ValidateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JWTServer is the server API for JWT service.
type JWTServer interface {
	FreshToken(context.Context, *JWTData) (*Token, error)
	AccessAndRefreshTokens(context.Context, *JWTData) (*AccessAndRefreshToken, error)
	RefreshTokens(context.Context, *Token) (*AccessAndRefreshToken, error)
	ValidateToken(context.Context, *ValidRequest) (*Claims, error)
}

// UnimplementedJWTServer can be embedded to have forward compatible implementations.
type UnimplementedJWTServer struct {
}

func (*UnimplementedJWTServer) FreshToken(ctx context.Context, req *JWTData) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FreshToken not implemented")
}
func (*UnimplementedJWTServer) AccessAndRefreshTokens(ctx context.Context, req *JWTData) (*AccessAndRefreshToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccessAndRefreshTokens not implemented")
}
func (*UnimplementedJWTServer) RefreshTokens(ctx context.Context, req *Token) (*AccessAndRefreshToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshTokens not implemented")
}
func (*UnimplementedJWTServer) ValidateToken(ctx context.Context, req *ValidRequest) (*Claims, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateToken not implemented")
}

func RegisterJWTServer(s *grpc.Server, srv JWTServer) {
	s.RegisterService(&_JWT_serviceDesc, srv)
}

func _JWT_FreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JWTData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JWTServer).FreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JWT/FreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JWTServer).FreshToken(ctx, req.(*JWTData))
	}
	return interceptor(ctx, in, info, handler)
}

func _JWT_AccessAndRefreshTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JWTData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JWTServer).AccessAndRefreshTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JWT/AccessAndRefreshTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JWTServer).AccessAndRefreshTokens(ctx, req.(*JWTData))
	}
	return interceptor(ctx, in, info, handler)
}

func _JWT_RefreshTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JWTServer).RefreshTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JWT/RefreshTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JWTServer).RefreshTokens(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _JWT_ValidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JWTServer).ValidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JWT/ValidateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JWTServer).ValidateToken(ctx, req.(*ValidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JWT_serviceDesc = grpc.ServiceDesc{
	ServiceName: "JWT",
	HandlerType: (*JWTServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FreshToken",
			Handler:    _JWT_FreshToken_Handler,
		},
		{
			MethodName: "AccessAndRefreshTokens",
			Handler:    _JWT_AccessAndRefreshTokens_Handler,
		},
		{
			MethodName: "RefreshTokens",
			Handler:    _JWT_RefreshTokens_Handler,
		},
		{
			MethodName: "ValidateToken",
			Handler:    _JWT_ValidateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jwt-srv.proto",
}
